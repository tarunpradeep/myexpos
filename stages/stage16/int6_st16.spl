alias currentPID R5;
currentPID = [SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE + currentPID*16 + 9] = 7; //setting the mode flag

alias userSP R0;
userSP=SP;
[PROCESS_TABLE + currentPID*16 + 13] = SP;
SP = [PROCESS_TABLE +  currentPID*16 + 11]*512 - 1;

alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum  = [PTBR+2*((userSP-4)/512)];
offset = (userSP-4)%512;
fileDescPhysicalAddr = (physicalPageNum *512)  + offset;
alias fileDescriptor R4;
fileDescriptor = [fileDescPhysicalAddr];

if (fileDescriptor!=-1) then
    alias physicalAddrRetVal R5;
    physicalAddrRetVal = ([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512);
    [physicalAddrRetVal] = -1;
endif;

if (fileDescriptor == -1) then
    alias wordAddr R6;
    wordAddr = [([PTBR + 2*((userSP-3)/512)]*512) + ((userSP-3)%512)]; //finding the word
    multipush(R0, R1, R2, R3, R4, R5, R6);
    R1 = 4; //calling terminal write from module 4(device manager module)
    R2 = [SYSTEM_STATUS_TABLE+1];
    R3 = wordAddr;
    call MOD_4;
    multipop(R0, R1, R2, R3, R4, R5, R6);
    alias physicalAddrRetVal R5;
    physicalAddrRetVal = ([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512);
    [physicalAddrRetVal] = 0;
endif;

currentPID = [SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE + currentPID*16 + 9] = 0; //setting the mode back to 0, user process
SP = userSP;
ireturn;

