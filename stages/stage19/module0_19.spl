alias functionNum R1;
alias currentPID R2;

//acquire terminal
if (functionNum == 8) then
    while([TERMINAL_STATUS_TABLE]==1) do
        [PROCESS_TABLE + currentPID*16 + 4] = WAIT_TERMINAL;
        multipush(R1, R2);
        call MOD_5;
        multipop(R1, R2);
    endwhile;
    [TERMINAL_STATUS_TABLE] = 1;
    [TERMINAL_STATUS_TABLE+1] = currentPID;
    return;
endif;

//release terminal
if (functionNum == 9) then
    if (currentPID != [TERMINAL_STATUS_TABLE+1]) then
        R0 = -1;
        return;
    endif;
    [TERMINAL_STATUS_TABLE] = 0;
    R3 = 1;
    while (R3<=15) do
        if ([PROCESS_TABLE + R3*16 + 4] == WAIT_TERMINAL) then
            [PROCESS_TABLE + R3*16 + 4] = READY;
        endif;
        R3 = R3+1;
    endwhile;
    R0 = 0;
    return;
endif;

//acquire disk
if (functionNum == 3) then
    while ([DISK_STATUS_TABLE] == 1) do
        [PROCESS_TABLE + 16*currentPID + 4] = WAIT_DISK;
        multipush(R0, R1, R2);
        call MOD_5;
        multipop(R0, R1, R2);
    endwhile;
    [DISK_STATUS_TABLE] = 1;
    [DISK_STATUS_TABLE + 4] = currentPID;
    return;
endif;
